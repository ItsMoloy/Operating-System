#include <stdio.h>

int main() {
    int n, i, time_quantum;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    int arrival[n], burst[n], remaining[n], wait[n], turnaround[n];
    printf("Enter Arrival Time and Burst Time for each process:\n");
    for(i=0;i<n;i++){
        printf("P%d Arrival Time: ", i+1);
        scanf("%d", &arrival[i]);
        printf("P%d Burst Time: ", i+1);
        scanf("%d", &burst[i]);
        remaining[i] = burst[i];
        wait[i] = 0;
    }

    printf("Enter Time Quantum: ");
    scanf("%d", &time_quantum);

    int t = 0; 
    int done;
    do {
        done = 1;
        for(i=0;i<n;i++) {
            if(remaining[i] > 0 && arrival[i] <= t) {
                done = 0;
                if(remaining[i] > time_quantum) {
                    t += time_quantum;
                    remaining[i] -= time_quantum;
                }
                else {
                    t += remaining[i];
                    wait[i] = t - arrival[i] - burst[i];
                    remaining[i] = 0;
                    turnaround[i] = wait[i] + burst[i];
                }
            }
        }
        if(done == 1) {
            for(i=0; i<n; i++) {
                if(remaining[i] > 0) {
                    t++;
                    done = 0;
                    break;
                }
            }
        }
    } while(done == 0);

    float total_wait = 0, total_turnaround = 0;
    printf("\nProcess\tArrival\tBurst\tWaiting\tTurnaround\n");
    for(i=0;i<n;i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", i+1, arrival[i], burst[i], wait[i], turnaround[i]);
        total_wait += wait[i];
        total_turnaround += turnaround[i];
    }

    printf("Average Waiting Time: %.2f\n", total_wait / n);
    printf("Average Turnaround Time: %.2f\n", total_turnaround / n);

    return 0;
}
