#include <stdio.h>

int main() {
    int n, i, j;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    int arrival[n], burst[n], wait[n], turnaround[n], completed[n];
    for(i=0;i<n;i++) completed[i]=0;

    printf("Enter Arrival Time and Burst Time for each process:\n");
    for (i = 0; i < n; i++) {
        printf("P%d Arrival Time: ", i+1);
        scanf("%d", &arrival[i]);
        printf("P%d Burst Time: ", i+1);
        scanf("%d", &burst[i]);
    }

    int current_time = 0, completed_count = 0;
    while(completed_count < n) {
        int idx = -1;
        int min_burst = 100000;

        for(i=0;i<n;i++) {
            if(arrival[i] <= current_time && !completed[i] && burst[i] < min_burst) {
                min_burst = burst[i];
                idx = i;
            }
        }

        if(idx != -1) {
            wait[idx] = current_time - arrival[idx];
            if(wait[idx] < 0) wait[idx] = 0;
            current_time += burst[idx];
            turnaround[idx] = wait[idx] + burst[idx];
            completed[idx] = 1;
            completed_count++;
        }
        else {
            current_time++; 
        }
    }

    float total_wait=0, total_turnaround=0;
    printf("\nProcess\tArrival\tBurst\tWaiting\tTurnaround\n");
    for(i=0;i<n;i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", i+1, arrival[i], burst[i], wait[i], turnaround[i]);
        total_wait += wait[i];
        total_turnaround += turnaround[i];
    }

    printf("Average Waiting Time: %.2f\n", total_wait/n);
    printf("Average Turnaround Time: %.2f\n", total_turnaround/n);

    return 0;
}
